load("@aspect_bazel_lib//lib:copy_to_bin.bzl", "copy_to_bin")
load("@aspect_rules_jest//jest:defs.bzl", "jest_test")
load("@aspect_rules_swc//swc:defs.bzl", "swc")
load("@aspect_rules_ts//ts:defs.bzl", "ts_config", "ts_project")
load("@bazel_skylib//lib:partial.bzl", "partial")
load("@npm//:defs.bzl", "npm_link_all_packages")

package(default_visibility = ["//visibility:public"])

TEST_FILES = "src/**/*.spec.ts"

npm_link_all_packages(name = "node_modules")

ts_config(
    name = "tsconfig",
    src = "tsconfig.json",
    deps = [
        "//:node_modules/@tsconfig/node22",
    ],
)

copy_to_bin(
    name = "swcrc",
    srcs = [".swcrc"],
)

ts_project(
    name = "lib",
    srcs = glob(
        include = ["src/**/*.ts"],
        exclude = [TEST_FILES],
    ) + ["package.json"],
    declaration = True,
    transpiler = partial.make(
        swc,
        swcrc = "//:swcrc",
    ),
    tsconfig = "//:tsconfig",
    deps = [
        "//:node_modules/@nestjs/common",
        "//:node_modules/@nestjs/core",
        "//:node_modules/@types/node",
        "//:node_modules/rxjs",
    ],
)

ts_project(
    name = "test_lib",
    srcs = glob([TEST_FILES]),
    declaration = True,
    transpiler = partial.make(
        swc,
        swcrc = "//:swcrc",
    ),
    tsconfig = "//:tsconfig",
    deps = [
        "lib",
        "//:node_modules/@nestjs/testing",
        "//:node_modules/@types/jest",
    ],
)

copy_to_bin(
    name = "jest_config",
    srcs = ["jest-bazel.config.cjs"],
)

jest_test(
    name = "jest",
    config = "jest_config",
    data = [
        "jest-setup.mjs",
        "package.json",
        "swcrc",
        "test_lib",
    ],
    node_modules = "//:node_modules",
    node_options = [
        "--experimental-vm-modules",
    ],
)
